import pytest
from mainCourseDuration import create_courses_dict, min_max_courses_duration, min_max_duration_courses_index, min_max_duration_courses_list


courses = ["Java-разработчик с нуля", "Fullstack-разработчик на Python", "Python-разработчик с нуля",
           "Frontend-разработчик с нуля"]


mentors = [
    ["Филипп Воронов", "Анна Юшина", "Иван Бочаров", "Анатолий Корсаков", "Юрий Пеньков", "Илья Сухачев",
     "Иван Маркитан", "Ринат Бибиков", "Вадим Ерошевичев", "Тимур Сейсембаев", "Максим Батырев", "Никита Шумский",
     "Алексей Степанов", "Денис Коротков", "Антон Глушков", "Сергей Индюков", "Максим Воронцов", "Евгений Грязнов",
     "Константин Виролайнен", "Сергей Сердюк", "Павел Дерендяев"],
    ["Евгений Шмаргунов", "Олег Булыгин", "Александр Бардин", "Александр Иванов", "Кирилл Табельский",
     "Александр Ульянцев", "Роман Гордиенко", "Адилет Асканжоев", "Александр Шлейко", "Алена Батицкая", "Денис Ежков",
     "Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Максим Филипенко", "Елена Никитина"],
    ["Евгений Шмаргунов", "Олег Булыгин", "Дмитрий Демидов", "Кирилл Табельский", "Александр Ульянцев",
     "Александр Бардин", "Александр Иванов", "Антон Солонилин", "Максим Филипенко", "Елена Никитина", "Азамат Искаков",
     "Роман Гордиенко"],
    ["Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Валерий Хаслер", "Татьяна Тен", "Александр Фитискин",
     "Александр Шлейко", "Алена Батицкая", "Александр Беспоясов", "Денис Ежков", "Николай Лопин", "Михаил Ларченко"]
]

durations = [14, 20, 12, 20]


def test_create_courses_dict():

    expected = [
            {'title': 'Java-разработчик с нуля',
             'mentor': ["Филипп Воронов", "Анна Юшина", "Иван Бочаров", "Анатолий Корсаков", "Юрий Пеньков",
                        "Илья Сухачев",
                        "Иван Маркитан", "Ринат Бибиков", "Вадим Ерошевичев", "Тимур Сейсембаев", "Максим Батырев",
                        "Никита Шумский",
                        "Алексей Степанов", "Денис Коротков", "Антон Глушков", "Сергей Индюков", "Максим Воронцов",
                        "Евгений Грязнов",
                        "Константин Виролайнен", "Сергей Сердюк", "Павел Дерендяев"], 'duration': 14},
            {'title': 'Fullstack-разработчик на Python',
             'mentor': ["Евгений Шмаргунов", "Олег Булыгин", "Александр Бардин", "Александр Иванов",
                        "Кирилл Табельский",
                        "Александр Ульянцев", "Роман Гордиенко", "Адилет Асканжоев", "Александр Шлейко",
                        "Алена Батицкая", "Денис Ежков",
                        "Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Максим Филипенко", "Елена Никитина"],
             'duration': 20},
            {'title': 'Python-разработчик с нуля',
             'mentor': ["Евгений Шмаргунов", "Олег Булыгин", "Дмитрий Демидов", "Кирилл Табельский",
                        "Александр Ульянцев",
                        "Александр Бардин", "Александр Иванов", "Антон Солонилин", "Максим Филипенко", "Елена Никитина",
                        "Азамат Искаков",
                        "Роман Гордиенко"], 'duration': 12},
            {'title': 'Frontend-разработчик с нуля',
             'mentor': ["Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Валерий Хаслер", "Татьяна Тен",
                        "Александр Фитискин",
                        "Александр Шлейко", "Алена Батицкая", "Александр Беспоясов", "Денис Ежков", "Николай Лопин",
                        "Михаил Ларченко"], 'duration': 20}
        ]


    result = create_courses_dict(courses, mentors, durations)
    assert result == expected


def test_min_max_courses_duration():
    min_d, max_d = min_max_courses_duration(durations)
    assert min_d == 12
    assert max_d == 20

def test_min_max_duration_courses_index():
    minis, maxes = min_max_duration_courses_index(durations, 12, 20)
    assert minis == [2]
    assert maxes == [1, 3]

def test_min_max_duration_courses_list():
    courses_list = create_courses_dict(courses, mentors, durations)
    min_d, max_d = min_max_courses_duration(durations)
    minis, maxes = min_max_duration_courses_index(durations, min_d, max_d)
    min_courses, max_courses = min_max_duration_courses_list(minis, maxes, courses_list, min_d, max_d)
    assert min_courses == ['Python-разработчик с нуля']
    assert max_courses == ['Fullstack-разработчик на Python', 'Frontend-разработчик с нуля']
    

if __name__ == '__main__':
    pytest.main()